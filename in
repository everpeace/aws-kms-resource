#!/bin/bash
[ "$DEBUG" = "true" ] && set -x
set -eu
set -o pipefail

exec 3>&1 # use fd 3 for script output
exec 1>&2 # send normal stdout to stderr for logging

# read stdin
payload=$(mktemp -d)/aws-kms-resource-input
cat > $payload <&0
version=$(jq -r .version.version < $payload)

# destination
destination=$1

# for jq
PATH=/usr/local/bin:$PATH

# load aws credentials
if [ -n "$(jq -r '.source.aws_access_key_id // ""' < $payload)" ]; then
  export AWS_ACCESS_KEY_ID=$(jq -r .source.aws_access_key_id < $payload)
fi

if [ -n "$(jq -r '.source.aws_secret_access_key // ""' < $payload)" ]; then
  export AWS_SECRET_ACCESS_KEY=$(jq -r .source.aws_secret_access_key < $payload)
fi

if [ -n "$(jq -r '.source.aws_region // ""' < $payload)" ]; then
  export AWS_DEFAULT_REGION=$(jq -r .source.aws_region < $payload)
else
  export AWS_DEFAULT_REGION="us-east-1"
fi


#
# decryption
#
source $(dirname $0)/decrypt.sh

# source:
#   ciphers:
echo "processing source.ciphers"
decrypt_ciphers $payload ".source.ciphers" $destination

# params:
#   ciphers:
echo "processing params.ciphers"
decrypt_ciphers $payload ".params.ciphers" $destination

# params:
#   cipher_files:
# echo "processing params.cipher_files"
# decrypt_cipher_files $payload ".params.cipher_files" $destination


jq -n '{
    version: { version: $version },
    metadata: []
}'  --arg version "$version" >&3
